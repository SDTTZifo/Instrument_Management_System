{% extends 'base.html' %} 


<title>{% block title %}Add Category{% endblock %}</title>    
{% block content %}

<!-- Header Section -->
<div class="container my-4">
    <div class="card shadow-sm rounded p-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h4 class="display-6 mb-0 text-success">Categories</h4>
            </div>
            <div class="col-md-6 d-flex justify-content-end gap-2">
                <a class="btn btn-success btn-sm rounded-pill shadow-sm" href="{% url 'add_category' %}">
                    <i class="fa-solid fa-plus"></i> Add Category
                </a>                   
            </div>
        </div>          
        <form class="input-group mt-4" role="search" id="searchform" action="{% url 'category_search_list' %}" method="get" accept-charset="utf-8">
            <input id="searchbox" name="query" type="text" class="form-control border-0 rounded-pill shadow-sm" placeholder="Search Categories..."
            value ="{{ query }}">
            <button class="btn btn-outline-success rounded-pill shadow-sm" type="submit">
                <i class="fa-solid fa-search"></i>
            </button>
        </form>
    </div>
</div>

<div class="container">
    <style>
        .table th, .table td {
            text-align: center;
        }
    </style>

    <!-- CSRF Token -->
    <input type="hidden" name="csrfmiddlewaretoken" value="{{ csrf_token }}">

    <table class="table table-bordered table-striped table-hover table-sm">
        <thead class="thead-light">
            <tr>
                <th scope="col">Category Name <i class="fa-solid fa-sort"></i></th>
                <th scope="col">Category Description <i class="fa-solid fa-sort"></i></th>                   
                <th scope="col">Actions <i class="fa-solid fa-sort"></i></th>
            </tr>
        </thead>
        <tbody>
            {% for category in categories %}
            <tr>
                <td>{{ category.category_name }}</td>      
                <td>{{ category.category_description }}</td>
                <td>
                    <a href="{% url 'edit_category' category.id %}" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Edit
                    </a>
                    <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal{{ category.id }}">
                        <i class="fas fa-trash"></i> Delete
                    </button>        
                </td>  
                <!-- Edit and delete button will come here -->
            </tr>
            <div class="modal fade" id="deleteModal{{ category.id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ category.id }}" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel{{ category.id }}">Confirm Deletion</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete the category "{{ category.category_name }}"?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" onclick="deleteCategory({{ category.id }})">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            {% empty %}
            <tr>
                <td colspan="3">No categories available.</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    body {
        background-color: #f8f9fa;
    }
    .header-title {
        font-size: 2.5rem;
        font-weight: 600;
        color: #343a40;
    }
    .card {
        transition: transform 0.2s ease-in-out;
    }
    .card:hover {
        transform: scale(1.02);
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    // Function to delete category using AJAX
    function deleteCategory(categoryId) {
        // Get the CSRF token from the hidden input field
        const csrftoken = document.querySelector('input[name="csrfmiddlewaretoken"]').value;
        const deleteURL = `/inventory/categories/delete/${categoryId}/`
        $.ajax({
            url: deleteURL,
            type: 'POST',
            data: {
                'csrfmiddlewaretoken': csrftoken,
            },
            success: function(response) {
                window.location.reload();
            },
            error: function(xhr, status, error) {
                console.error('Error deleting category:', error);
            }
        });
    }
</script>


    {% endblock %}


urlpatterns = [
    path('', home_page, name='index'),
    path('home/', home_page, name='home'),
    path('instruments/', instruments_view, name='instruments'),  # Add instruments view
    path('instrument-search-list/', search_instrument_view, name='instrument_search_list'),
    path('add-instrument/', add_instrument_view, name='add_instrument'),
    path('categories/', category_view, name='categories'),
    path('add-category/', add_category_view, name='add_category'),  # Add Categories view
    path('category-search-list/', search_category_view, name='category_search_list'),
    path('locations/', location_view, name='locations'),
    path('add-location/', add_location_view, name='add_location'),  # Add Locations
    path('categories/edit/<int:category_id>/', edit_category_view, name='edit_category'),  # New edit URL
    path('categories/delete/<int:category_id>/', delete_category_view, name='delete_category')  # New edit URL
]

from django.shortcuts import redirect, render, get_object_or_404
from django.contrib import messages
from Inventory.models import Category, Instrument, Location
from django.contrib.auth.decorators import login_required
from django.contrib.auth import logout
from django.db.models import Q
from django.http import JsonResponse

@login_required
def category_view(request):
    categories = Category.objects.all()  # Retrieve all instrument records
    return render(request, 'categories/categories.html', {'categories': categories})

@login_required
def add_category_view(request):
    if request.method == 'POST':
        category_name = request.POST.get('category_name')
        category_description = request.POST.get('category_description')       

        # Create a new category object and save it to the database
        new_category = Category(
            category_name=category_name,
            category_description=category_description
        )
        new_category.save()  # Save to database

        return redirect('categories')  # Redirect to categories view after saving

    return render(request, 'categories/add_category.html')


def edit_category_view(request, category_id):
    print("ID comes: " + str(category_id))
    print(Category.objects.get(id=category_id))
    category = get_object_or_404(Category, id=category_id)  # Fetch the category or return 404 if not found

    if request.method == 'POST':
        category.category_name = request.POST.get('category_name')
        category.category_description = request.POST.get('category_description')
        category.save()  # Save the updated category to the database

        return redirect('categories')  # Redirect to categories view after saving

    return render(request, 'categories/edit_category.html', {'category': category})


def delete_category_view(request, category_id):
    category = get_object_or_404(Category, id=category_id)

    if request.method == 'POST':
        category.delete()  # Delete the category

        if request.headers.get('x-requested-with') == 'XMLHttpRequest':  # Check if it's an AJAX request
            return JsonResponse({'message': 'Category deleted successfully'})

        return redirect('categories')  # Redirect if not an AJAX request


@login_required
def search_category_view(request):        
    if request.method == 'GET': # this will be GET now      
        category_name =  request.GET.get('query') # do some research what it does       
        try:
            categories = Category.objects.filter(category_name__icontains=category_name) # filter returns a list so you might consider skip except part
            return render(request, 'categories/categories.html', {'categories': categories})
        except:
            return render(request, 'categories/categories.html', {})
    else:
        return render(request, 'categories/categories.html', {})








GPT:

from django.db.models import Q

@login_required
def category_view(request):
    query = request.GET.get('query', '')  # Get the query parameter, default to an empty string
    if query:
        # Filter categories based on the search query for both name and description
        categories = Category.objects.filter(
            Q(category_name__icontains=query) | Q(category_description__icontains=query)
        )
    else:
        # If no search query, retrieve all categories
        categories = Category.objects.all()

    return render(request, 'categories/categories.html', {
        'categories': categories,
        'query': query  # Pass the query back to the template to keep the search field populated
    })



{% extends 'base.html' %}

<title>{% block title %}Categories{% endblock %}</title>

{% block content %}
<!-- Header Section -->
<div class="container my-4">
    <div class="card shadow-sm rounded p-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h4 class="display-6 mb-0 text-success">Categories</h4>
            </div>
            <div class="col-md-6 d-flex justify-content-end gap-2">
                <a class="btn btn-success btn-sm rounded-pill shadow-sm" href="{% url 'add_category' %}">
                    <i class="fa-solid fa-plus"></i> Add Category
                </a>
            </div>
        </div>
        <!-- Search Form -->
        <form class="input-group mt-4" id="searchform" method="get" action="{% url 'categories' %}">
            <input id="searchbox" name="query" type="text" class="form-control border-0 rounded-pill shadow-sm" placeholder="Search Categories..." value="{{ query }}">
            <button class="btn btn-outline-success rounded-pill shadow-sm" type="submit">
                <i class="fa-solid fa-search"></i>
            </button>
            <!-- Only show the Clear button when a query is present -->
            {% if query %}
                <a class="btn btn-outline-secondary rounded-pill shadow-sm ms-2" href="{% url 'categories' %}">
                    Clear Search
                </a>
            {% endif %}
        </form>
    </div>
</div>

<div class="container">
    <!-- CSRF Token -->
    <input type="hidden" name="csrfmiddlewaretoken" value="{{ csrf_token }}">

    <table class="table table-bordered table-striped table-hover table-sm">
        <thead class="thead-light">
            <tr>
                <th scope="col">Category Name <i class="fa-solid fa-sort"></i></th>
                <th scope="col">Category Description <i class="fa-solid fa-sort"></i></th>
                <th scope="col">Actions <i class="fa-solid fa-sort"></i></th>
            </tr>
        </thead>
        <tbody>
            {% for category in categories %}
                <tr>
                    <td>{{ category.category_name }}</td>
                    <td>{{ category.category_description }}</td>
                    <td>
                        <a href="{% url 'edit_category' category.id %}" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal{{ category.id }}">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>

                <!-- Delete Confirmation Modal -->
                <div class="modal fade" id="deleteModal{{ category.id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ category.id }}" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteModalLabel{{ category.id }}">Confirm Deletion</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete the category "{{ category.category_name }}"?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-danger" onclick="deleteCategory({{ category.id }})">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            {% empty %}
                <tr>
                    <td colspan="3">No categories available.</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Include necessary scripts and styles -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    // Function to delete category using AJAX
    function deleteCategory(categoryId) {
        const csrftoken = document.querySelector('input[name="csrfmiddlewaretoken"]').value;
        const deleteURL = `/inventory/categories/delete/${categoryId}/`;
        $.ajax({
            url: deleteURL,
            type: 'POST',
            data: { 'csrfmiddlewaretoken': csrftoken },
            success: function(response) {
                window.location.reload();
            },
            error: function(xhr, status, error) {
                console.error('Error deleting category:', error);
            }
        });
    }
</script>
{% endblock %}
